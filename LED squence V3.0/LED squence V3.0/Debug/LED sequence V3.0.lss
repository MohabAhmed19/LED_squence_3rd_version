
LED sequence V3.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001214  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00001214  000012a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800062  00800062  000012aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002db1  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000827  00000000  00000000  00004201  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013ef  00000000  00000000  00004a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00005e18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d7  00000000  00000000  00006014  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000786  00000000  00000000  000064eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00006c71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__vector_1>
       8:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e1       	ldi	r30, 0x14	; 20
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 36       	cpi	r26, 0x62	; 98
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a2 e6       	ldi	r26, 0x62	; 98
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 36       	cpi	r26, 0x65	; 101
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <main>
      8a:	0c 94 08 09 	jmp	0x1210	; 0x1210 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <delay_100ms>:

unsigned int timer;

void delay_100ms(void)
{
	timer=0;
      92:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
      96:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 44);
      9a:	6c e2       	ldi	r22, 0x2C	; 44
      9c:	80 e0       	ldi	r24, 0x00	; 0
      9e:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(8);
      a2:	88 e0       	ldi	r24, 0x08	; 8
      a4:	90 e0       	ldi	r25, 0x00	; 0
      a6:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 49);
      aa:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
      ae:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
      b2:	c1 97       	sbiw	r24, 0x31	; 49
      b4:	d0 f3       	brcs	.-12     	; 0xaa <delay_100ms+0x18>
}
      b6:	08 95       	ret

000000b8 <delay_900ms>:

void delay_900ms(void)
{
	timer=0;
      b8:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
      bc:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 140);
      c0:	6c e8       	ldi	r22, 0x8C	; 140
      c2:	80 e0       	ldi	r24, 0x00	; 0
      c4:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(8);
      c8:	88 e0       	ldi	r24, 0x08	; 8
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 440);
      d0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
      d4:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
      d8:	88 3b       	cpi	r24, 0xB8	; 184
      da:	91 40       	sbci	r25, 0x01	; 1
      dc:	c8 f3       	brcs	.-14     	; 0xd0 <delay_900ms+0x18>
}
      de:	08 95       	ret

000000e0 <delay_200ms>:

void delay_200ms(void)
{
	timer=0;
      e0:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
      e4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 203);
      e8:	6b ec       	ldi	r22, 0xCB	; 203
      ea:	80 e0       	ldi	r24, 0x00	; 0
      ec:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(64);
      f0:	80 e4       	ldi	r24, 0x40	; 64
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 13);
      f8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
      fc:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     100:	0d 97       	sbiw	r24, 0x0d	; 13
     102:	d0 f3       	brcs	.-12     	; 0xf8 <delay_200ms+0x18>
}
     104:	08 95       	ret

00000106 <delay_800ms>:

void delay_800ms(void)
{
	timer=0;
     106:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
     10a:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 203);
     10e:	6b ec       	ldi	r22, 0xCB	; 203
     110:	80 e0       	ldi	r24, 0x00	; 0
     112:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(256);
     116:	80 e0       	ldi	r24, 0x00	; 0
     118:	91 e0       	ldi	r25, 0x01	; 1
     11a:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 13);
     11e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
     122:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     126:	0d 97       	sbiw	r24, 0x0d	; 13
     128:	d0 f3       	brcs	.-12     	; 0x11e <delay_800ms+0x18>
}
     12a:	08 95       	ret

0000012c <delay_300ms>:

void delay_300ms(void)
{
	timer=0;
     12c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
     130:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 132);
     134:	64 e8       	ldi	r22, 0x84	; 132
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(8);
     13c:	88 e0       	ldi	r24, 0x08	; 8
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 147);
     144:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
     148:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     14c:	83 39       	cpi	r24, 0x93	; 147
     14e:	91 05       	cpc	r25, r1
     150:	c8 f3       	brcs	.-14     	; 0x144 <delay_300ms+0x18>
}
     152:	08 95       	ret

00000154 <delay_700ms>:

void delay_700ms(void)
{
	timer=0;
     154:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
     158:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 52);
     15c:	64 e3       	ldi	r22, 0x34	; 52
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(8);
     164:	88 e0       	ldi	r24, 0x08	; 8
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 342);
     16c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
     170:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     174:	86 35       	cpi	r24, 0x56	; 86
     176:	91 40       	sbci	r25, 0x01	; 1
     178:	c8 f3       	brcs	.-14     	; 0x16c <delay_700ms+0x18>
}
     17a:	08 95       	ret

0000017c <delay_500ms>:

void delay_500ms(void)
{
	timer=0;
     17c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x1>
     180:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	timer0_init(Normal, 220);
     184:	6c ed       	ldi	r22, 0xDC	; 220
     186:	80 e0       	ldi	r24, 0x00	; 0
     188:	0e 94 8b 08 	call	0x1116	; 0x1116 <timer0_init>
	start_timer0(8);
     18c:	88 e0       	ldi	r24, 0x08	; 8
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	0e 94 b6 08 	call	0x116c	; 0x116c <start_timer0>
	while(timer < 245);
     194:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
     198:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     19c:	85 3f       	cpi	r24, 0xF5	; 245
     19e:	91 05       	cpc	r25, r1
     1a0:	c8 f3       	brcs	.-14     	; 0x194 <delay_500ms+0x18>
}
     1a2:	08 95       	ret

000001a4 <__vector_11>:


ISR(__vector_11)
{
     1a4:	1f 92       	push	r1
     1a6:	0f 92       	push	r0
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	0f 92       	push	r0
     1ac:	11 24       	eor	r1, r1
     1ae:	8f 93       	push	r24
     1b0:	9f 93       	push	r25
	timer++;
     1b2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
     1b6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x1>
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__data_end+0x1>
     1c0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
     1c4:	9f 91       	pop	r25
     1c6:	8f 91       	pop	r24
     1c8:	0f 90       	pop	r0
     1ca:	0f be       	out	0x3f, r0	; 63
     1cc:	0f 90       	pop	r0
     1ce:	1f 90       	pop	r1
     1d0:	18 95       	reti

000001d2 <LED_init>:


uint8_t LED_init(uint8_t Port_number, uint8_t Pin_number)
{
	uint8_t error=0;
	if(DIO_init(Port_number, Pin_number, out) == 0 )
     1d2:	41 e0       	ldi	r20, 0x01	; 1
     1d4:	0e 94 16 07 	call	0xe2c	; 0xe2c <DIO_init>
     1d8:	81 11       	cpse	r24, r1
	{
		error=0;
	}
	else
	{
		error=1;
     1da:	81 e0       	ldi	r24, 0x01	; 1
	}
	return error;
}
     1dc:	08 95       	ret

000001de <LED_ON>:


uint8_t LED_ON(uint8_t Port_number, uint8_t Pin_number)
{
	uint8_t error=0;
	if(DIO_write(Port_number, Pin_number, high) == 0)
     1de:	41 e0       	ldi	r20, 0x01	; 1
     1e0:	0e 94 91 07 	call	0xf22	; 0xf22 <DIO_write>
     1e4:	81 11       	cpse	r24, r1
	{
		error=0;
	}
	else
	{
		error=1;
     1e6:	81 e0       	ldi	r24, 0x01	; 1
	}
	return error;
}
     1e8:	08 95       	ret

000001ea <LED_OFF>:

uint8_t LED_OFF(uint8_t Port_number, uint8_t Pin_number)
{
	uint8_t error=0;
	if(DIO_write(Port_number, Pin_number, low) == 0)
     1ea:	40 e0       	ldi	r20, 0x00	; 0
     1ec:	0e 94 91 07 	call	0xf22	; 0xf22 <DIO_write>
     1f0:	81 11       	cpse	r24, r1
	{
		error=0;
	}
	else
	{
		error=1;
     1f2:	81 e0       	ldi	r24, 0x01	; 1
	}
	return error;
}
     1f4:	08 95       	ret

000001f6 <main>:
uint8_t Blink_state=1;
uint8_t PB0_state=0;

int main(void)
{
    LED_init(Port_A, PIN_0);
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	81 e4       	ldi	r24, 0x41	; 65
     1fa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <LED_init>
	LED_init(Port_A, PIN_1);
     1fe:	61 e0       	ldi	r22, 0x01	; 1
     200:	81 e4       	ldi	r24, 0x41	; 65
     202:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <LED_init>
	LED_init(Port_A, PIN_2);
     206:	62 e0       	ldi	r22, 0x02	; 2
     208:	81 e4       	ldi	r24, 0x41	; 65
     20a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <LED_init>
	LED_init(Port_A, PIN_3);
     20e:	63 e0       	ldi	r22, 0x03	; 3
     210:	81 e4       	ldi	r24, 0x41	; 65
     212:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <LED_init>
	ex_int_init(Interrupt_0,rising_edge);
     216:	66 e0       	ldi	r22, 0x06	; 6
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	0e 94 0c 08 	call	0x1018	; 0x1018 <ex_int_init>
	ex_int_init(Interrupt_1,rising_edge);
     21e:	66 e0       	ldi	r22, 0x06	; 6
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	0e 94 0c 08 	call	0x1018	; 0x1018 <ex_int_init>
	
   while(1)
   {
		switch(Blink_state)
     226:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     22a:	83 30       	cpi	r24, 0x03	; 3
     22c:	09 f4       	brne	.+2      	; 0x230 <main+0x3a>
     22e:	5c c2       	rjmp	.+1208   	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
     230:	30 f4       	brcc	.+12     	; 0x23e <main+0x48>
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	59 f0       	breq	.+22     	; 0x24c <main+0x56>
     236:	82 30       	cpi	r24, 0x02	; 2
     238:	09 f4       	brne	.+2      	; 0x23c <main+0x46>
     23a:	2f c1       	rjmp	.+606    	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
     23c:	f4 cf       	rjmp	.-24     	; 0x226 <main+0x30>
     23e:	84 30       	cpi	r24, 0x04	; 4
     240:	09 f4       	brne	.+2      	; 0x244 <main+0x4e>
     242:	79 c3       	rjmp	.+1778   	; 0x936 <__stack+0xd7>
     244:	85 30       	cpi	r24, 0x05	; 5
     246:	09 f4       	brne	.+2      	; 0x24a <main+0x54>
     248:	9d c4       	rjmp	.+2362   	; 0xb84 <__stack+0x325>
     24a:	ed cf       	rjmp	.-38     	; 0x226 <main+0x30>
		{
			case 1:
			if(PB0_state==0)
     24c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     250:	81 11       	cpse	r24, r1
     252:	11 c0       	rjmp	.+34     	; 0x276 <main+0x80>
			{
				LED_OFF(Port_A, PIN_0);
     254:	60 e0       	ldi	r22, 0x00	; 0
     256:	81 e4       	ldi	r24, 0x41	; 65
     258:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	81 e4       	ldi	r24, 0x41	; 65
     260:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     264:	62 e0       	ldi	r22, 0x02	; 2
     266:	81 e4       	ldi	r24, 0x41	; 65
     268:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     26c:	63 e0       	ldi	r22, 0x03	; 3
     26e:	81 e4       	ldi	r24, 0x41	; 65
     270:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
     274:	d8 cf       	rjmp	.-80     	; 0x226 <main+0x30>
			}
			else if(PB0_state==1)
     276:	81 30       	cpi	r24, 0x01	; 1
     278:	29 f5       	brne	.+74     	; 0x2c4 <main+0xce>
			{
				LED_ON(Port_A, PIN_0);
     27a:	60 e0       	ldi	r22, 0x00	; 0
     27c:	81 e4       	ldi	r24, 0x41	; 65
     27e:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_1);
     282:	61 e0       	ldi	r22, 0x01	; 1
     284:	81 e4       	ldi	r24, 0x41	; 65
     286:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     28a:	62 e0       	ldi	r22, 0x02	; 2
     28c:	81 e4       	ldi	r24, 0x41	; 65
     28e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     292:	63 e0       	ldi	r22, 0x03	; 3
     294:	81 e4       	ldi	r24, 0x41	; 65
     296:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_100ms();
     29a:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     29e:	60 e0       	ldi	r22, 0x00	; 0
     2a0:	81 e4       	ldi	r24, 0x41	; 65
     2a2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	81 e4       	ldi	r24, 0x41	; 65
     2aa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     2ae:	62 e0       	ldi	r22, 0x02	; 2
     2b0:	81 e4       	ldi	r24, 0x41	; 65
     2b2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     2b6:	63 e0       	ldi	r22, 0x03	; 3
     2b8:	81 e4       	ldi	r24, 0x41	; 65
     2ba:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     2be:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     2c2:	b1 cf       	rjmp	.-158    	; 0x226 <main+0x30>
			}
			else if(PB0_state==2)
     2c4:	82 30       	cpi	r24, 0x02	; 2
     2c6:	29 f5       	brne	.+74     	; 0x312 <main+0x11c>
			{
				LED_ON(Port_A, PIN_0);
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	81 e4       	ldi	r24, 0x41	; 65
     2cc:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     2d0:	61 e0       	ldi	r22, 0x01	; 1
     2d2:	81 e4       	ldi	r24, 0x41	; 65
     2d4:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_2);
     2d8:	62 e0       	ldi	r22, 0x02	; 2
     2da:	81 e4       	ldi	r24, 0x41	; 65
     2dc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     2e0:	63 e0       	ldi	r22, 0x03	; 3
     2e2:	81 e4       	ldi	r24, 0x41	; 65
     2e4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_100ms();
     2e8:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	81 e4       	ldi	r24, 0x41	; 65
     2f0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     2f4:	61 e0       	ldi	r22, 0x01	; 1
     2f6:	81 e4       	ldi	r24, 0x41	; 65
     2f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     2fc:	62 e0       	ldi	r22, 0x02	; 2
     2fe:	81 e4       	ldi	r24, 0x41	; 65
     300:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     304:	63 e0       	ldi	r22, 0x03	; 3
     306:	81 e4       	ldi	r24, 0x41	; 65
     308:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     30c:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     310:	8a cf       	rjmp	.-236    	; 0x226 <main+0x30>
			}
			else if(PB0_state==3)
     312:	83 30       	cpi	r24, 0x03	; 3
     314:	29 f5       	brne	.+74     	; 0x360 <main+0x16a>
			{
				LED_ON(Port_A, PIN_0);
     316:	60 e0       	ldi	r22, 0x00	; 0
     318:	81 e4       	ldi	r24, 0x41	; 65
     31a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     31e:	61 e0       	ldi	r22, 0x01	; 1
     320:	81 e4       	ldi	r24, 0x41	; 65
     322:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     326:	62 e0       	ldi	r22, 0x02	; 2
     328:	81 e4       	ldi	r24, 0x41	; 65
     32a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_3);
     32e:	63 e0       	ldi	r22, 0x03	; 3
     330:	81 e4       	ldi	r24, 0x41	; 65
     332:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_100ms();
     336:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	81 e4       	ldi	r24, 0x41	; 65
     33e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     342:	61 e0       	ldi	r22, 0x01	; 1
     344:	81 e4       	ldi	r24, 0x41	; 65
     346:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     34a:	62 e0       	ldi	r22, 0x02	; 2
     34c:	81 e4       	ldi	r24, 0x41	; 65
     34e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     352:	63 e0       	ldi	r22, 0x03	; 3
     354:	81 e4       	ldi	r24, 0x41	; 65
     356:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     35a:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     35e:	63 cf       	rjmp	.-314    	; 0x226 <main+0x30>
			}
			else if(PB0_state==4)
     360:	84 30       	cpi	r24, 0x04	; 4
     362:	29 f5       	brne	.+74     	; 0x3ae <main+0x1b8>
			{
				LED_ON(Port_A, PIN_0);
     364:	60 e0       	ldi	r22, 0x00	; 0
     366:	81 e4       	ldi	r24, 0x41	; 65
     368:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	81 e4       	ldi	r24, 0x41	; 65
     370:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     374:	62 e0       	ldi	r22, 0x02	; 2
     376:	81 e4       	ldi	r24, 0x41	; 65
     378:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     37c:	63 e0       	ldi	r22, 0x03	; 3
     37e:	81 e4       	ldi	r24, 0x41	; 65
     380:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_100ms();
     384:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	81 e4       	ldi	r24, 0x41	; 65
     38c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     390:	61 e0       	ldi	r22, 0x01	; 1
     392:	81 e4       	ldi	r24, 0x41	; 65
     394:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     398:	62 e0       	ldi	r22, 0x02	; 2
     39a:	81 e4       	ldi	r24, 0x41	; 65
     39c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     3a0:	63 e0       	ldi	r22, 0x03	; 3
     3a2:	81 e4       	ldi	r24, 0x41	; 65
     3a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     3a8:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     3ac:	3c cf       	rjmp	.-392    	; 0x226 <main+0x30>
			}
			else if(PB0_state==5)
     3ae:	85 30       	cpi	r24, 0x05	; 5
     3b0:	29 f5       	brne	.+74     	; 0x3fc <main+0x206>
			{
				LED_OFF(Port_A, PIN_0);
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	81 e4       	ldi	r24, 0x41	; 65
     3b6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_1);
     3ba:	61 e0       	ldi	r22, 0x01	; 1
     3bc:	81 e4       	ldi	r24, 0x41	; 65
     3be:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     3c2:	62 e0       	ldi	r22, 0x02	; 2
     3c4:	81 e4       	ldi	r24, 0x41	; 65
     3c6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     3ca:	63 e0       	ldi	r22, 0x03	; 3
     3cc:	81 e4       	ldi	r24, 0x41	; 65
     3ce:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_100ms();
     3d2:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     3d6:	60 e0       	ldi	r22, 0x00	; 0
     3d8:	81 e4       	ldi	r24, 0x41	; 65
     3da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     3de:	61 e0       	ldi	r22, 0x01	; 1
     3e0:	81 e4       	ldi	r24, 0x41	; 65
     3e2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     3e6:	62 e0       	ldi	r22, 0x02	; 2
     3e8:	81 e4       	ldi	r24, 0x41	; 65
     3ea:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     3ee:	63 e0       	ldi	r22, 0x03	; 3
     3f0:	81 e4       	ldi	r24, 0x41	; 65
     3f2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     3f6:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     3fa:	15 cf       	rjmp	.-470    	; 0x226 <main+0x30>
			}
			else if(PB0_state==6)
     3fc:	86 30       	cpi	r24, 0x06	; 6
     3fe:	29 f5       	brne	.+74     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
			{
				LED_OFF(Port_A, PIN_0);
     400:	60 e0       	ldi	r22, 0x00	; 0
     402:	81 e4       	ldi	r24, 0x41	; 65
     404:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     408:	61 e0       	ldi	r22, 0x01	; 1
     40a:	81 e4       	ldi	r24, 0x41	; 65
     40c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_2);
     410:	62 e0       	ldi	r22, 0x02	; 2
     412:	81 e4       	ldi	r24, 0x41	; 65
     414:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     418:	63 e0       	ldi	r22, 0x03	; 3
     41a:	81 e4       	ldi	r24, 0x41	; 65
     41c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_100ms();
     420:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     424:	60 e0       	ldi	r22, 0x00	; 0
     426:	81 e4       	ldi	r24, 0x41	; 65
     428:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	81 e4       	ldi	r24, 0x41	; 65
     430:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     434:	62 e0       	ldi	r22, 0x02	; 2
     436:	81 e4       	ldi	r24, 0x41	; 65
     438:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     43c:	63 e0       	ldi	r22, 0x03	; 3
     43e:	81 e4       	ldi	r24, 0x41	; 65
     440:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     444:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     448:	ee ce       	rjmp	.-548    	; 0x226 <main+0x30>
			}
			else if(PB0_state==7)
     44a:	87 30       	cpi	r24, 0x07	; 7
     44c:	09 f0       	breq	.+2      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     44e:	eb ce       	rjmp	.-554    	; 0x226 <main+0x30>
			{
				LED_OFF(Port_A, PIN_0);
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	81 e4       	ldi	r24, 0x41	; 65
     454:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     458:	61 e0       	ldi	r22, 0x01	; 1
     45a:	81 e4       	ldi	r24, 0x41	; 65
     45c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     460:	62 e0       	ldi	r22, 0x02	; 2
     462:	81 e4       	ldi	r24, 0x41	; 65
     464:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_3);
     468:	63 e0       	ldi	r22, 0x03	; 3
     46a:	81 e4       	ldi	r24, 0x41	; 65
     46c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_100ms();
     470:	0e 94 49 00 	call	0x92	; 0x92 <delay_100ms>
				LED_OFF(Port_A, PIN_0);
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	81 e4       	ldi	r24, 0x41	; 65
     478:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	81 e4       	ldi	r24, 0x41	; 65
     480:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     484:	62 e0       	ldi	r22, 0x02	; 2
     486:	81 e4       	ldi	r24, 0x41	; 65
     488:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     48c:	63 e0       	ldi	r22, 0x03	; 3
     48e:	81 e4       	ldi	r24, 0x41	; 65
     490:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_900ms();
     494:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay_900ms>
     498:	c6 ce       	rjmp	.-628    	; 0x226 <main+0x30>
			}
			break;
			case 2:
			if(PB0_state==0)
     49a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     49e:	81 11       	cpse	r24, r1
     4a0:	11 c0       	rjmp	.+34     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
			{
				LED_OFF(Port_A, PIN_0);
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	81 e4       	ldi	r24, 0x41	; 65
     4a6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	81 e4       	ldi	r24, 0x41	; 65
     4ae:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     4b2:	62 e0       	ldi	r22, 0x02	; 2
     4b4:	81 e4       	ldi	r24, 0x41	; 65
     4b6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     4ba:	63 e0       	ldi	r22, 0x03	; 3
     4bc:	81 e4       	ldi	r24, 0x41	; 65
     4be:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
     4c2:	b1 ce       	rjmp	.-670    	; 0x226 <main+0x30>
			}
			else if(PB0_state==1)
     4c4:	81 30       	cpi	r24, 0x01	; 1
     4c6:	29 f5       	brne	.+74     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
			{
				LED_ON(Port_A, PIN_0);
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	81 e4       	ldi	r24, 0x41	; 65
     4cc:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_1);
     4d0:	61 e0       	ldi	r22, 0x01	; 1
     4d2:	81 e4       	ldi	r24, 0x41	; 65
     4d4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     4d8:	62 e0       	ldi	r22, 0x02	; 2
     4da:	81 e4       	ldi	r24, 0x41	; 65
     4dc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     4e0:	63 e0       	ldi	r22, 0x03	; 3
     4e2:	81 e4       	ldi	r24, 0x41	; 65
     4e4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     4e8:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     4ec:	60 e0       	ldi	r22, 0x00	; 0
     4ee:	81 e4       	ldi	r24, 0x41	; 65
     4f0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     4f4:	61 e0       	ldi	r22, 0x01	; 1
     4f6:	81 e4       	ldi	r24, 0x41	; 65
     4f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     4fc:	62 e0       	ldi	r22, 0x02	; 2
     4fe:	81 e4       	ldi	r24, 0x41	; 65
     500:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     504:	63 e0       	ldi	r22, 0x03	; 3
     506:	81 e4       	ldi	r24, 0x41	; 65
     508:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     50c:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     510:	8a ce       	rjmp	.-748    	; 0x226 <main+0x30>
			}
			else if(PB0_state==2)
     512:	82 30       	cpi	r24, 0x02	; 2
     514:	29 f5       	brne	.+74     	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
			{
				LED_ON(Port_A, PIN_0);
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	81 e4       	ldi	r24, 0x41	; 65
     51a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     51e:	61 e0       	ldi	r22, 0x01	; 1
     520:	81 e4       	ldi	r24, 0x41	; 65
     522:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_2);
     526:	62 e0       	ldi	r22, 0x02	; 2
     528:	81 e4       	ldi	r24, 0x41	; 65
     52a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     52e:	63 e0       	ldi	r22, 0x03	; 3
     530:	81 e4       	ldi	r24, 0x41	; 65
     532:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     536:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	81 e4       	ldi	r24, 0x41	; 65
     53e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     542:	61 e0       	ldi	r22, 0x01	; 1
     544:	81 e4       	ldi	r24, 0x41	; 65
     546:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     54a:	62 e0       	ldi	r22, 0x02	; 2
     54c:	81 e4       	ldi	r24, 0x41	; 65
     54e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     552:	63 e0       	ldi	r22, 0x03	; 3
     554:	81 e4       	ldi	r24, 0x41	; 65
     556:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     55a:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     55e:	63 ce       	rjmp	.-826    	; 0x226 <main+0x30>
			}
			else if(PB0_state==3)
     560:	83 30       	cpi	r24, 0x03	; 3
     562:	29 f5       	brne	.+74     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
			{
				LED_ON(Port_A, PIN_0);
     564:	60 e0       	ldi	r22, 0x00	; 0
     566:	81 e4       	ldi	r24, 0x41	; 65
     568:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     56c:	61 e0       	ldi	r22, 0x01	; 1
     56e:	81 e4       	ldi	r24, 0x41	; 65
     570:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     574:	62 e0       	ldi	r22, 0x02	; 2
     576:	81 e4       	ldi	r24, 0x41	; 65
     578:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_3);
     57c:	63 e0       	ldi	r22, 0x03	; 3
     57e:	81 e4       	ldi	r24, 0x41	; 65
     580:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     584:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	81 e4       	ldi	r24, 0x41	; 65
     58c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     590:	61 e0       	ldi	r22, 0x01	; 1
     592:	81 e4       	ldi	r24, 0x41	; 65
     594:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     598:	62 e0       	ldi	r22, 0x02	; 2
     59a:	81 e4       	ldi	r24, 0x41	; 65
     59c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     5a0:	63 e0       	ldi	r22, 0x03	; 3
     5a2:	81 e4       	ldi	r24, 0x41	; 65
     5a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     5a8:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     5ac:	3c ce       	rjmp	.-904    	; 0x226 <main+0x30>
			}
			else if(PB0_state==4)
     5ae:	84 30       	cpi	r24, 0x04	; 4
     5b0:	29 f5       	brne	.+74     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
			{
				LED_ON(Port_A, PIN_0);
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	81 e4       	ldi	r24, 0x41	; 65
     5b6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     5ba:	61 e0       	ldi	r22, 0x01	; 1
     5bc:	81 e4       	ldi	r24, 0x41	; 65
     5be:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     5c2:	62 e0       	ldi	r22, 0x02	; 2
     5c4:	81 e4       	ldi	r24, 0x41	; 65
     5c6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     5ca:	63 e0       	ldi	r22, 0x03	; 3
     5cc:	81 e4       	ldi	r24, 0x41	; 65
     5ce:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_200ms();
     5d2:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	81 e4       	ldi	r24, 0x41	; 65
     5da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     5de:	61 e0       	ldi	r22, 0x01	; 1
     5e0:	81 e4       	ldi	r24, 0x41	; 65
     5e2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     5e6:	62 e0       	ldi	r22, 0x02	; 2
     5e8:	81 e4       	ldi	r24, 0x41	; 65
     5ea:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     5ee:	63 e0       	ldi	r22, 0x03	; 3
     5f0:	81 e4       	ldi	r24, 0x41	; 65
     5f2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     5f6:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     5fa:	15 ce       	rjmp	.-982    	; 0x226 <main+0x30>
			}
			else if(PB0_state==5)
     5fc:	85 30       	cpi	r24, 0x05	; 5
     5fe:	29 f5       	brne	.+74     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
			{
				LED_OFF(Port_A, PIN_0);
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	81 e4       	ldi	r24, 0x41	; 65
     604:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_1);
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	81 e4       	ldi	r24, 0x41	; 65
     60c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     610:	62 e0       	ldi	r22, 0x02	; 2
     612:	81 e4       	ldi	r24, 0x41	; 65
     614:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     618:	63 e0       	ldi	r22, 0x03	; 3
     61a:	81 e4       	ldi	r24, 0x41	; 65
     61c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_200ms();
     620:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	81 e4       	ldi	r24, 0x41	; 65
     628:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     62c:	61 e0       	ldi	r22, 0x01	; 1
     62e:	81 e4       	ldi	r24, 0x41	; 65
     630:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     634:	62 e0       	ldi	r22, 0x02	; 2
     636:	81 e4       	ldi	r24, 0x41	; 65
     638:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     63c:	63 e0       	ldi	r22, 0x03	; 3
     63e:	81 e4       	ldi	r24, 0x41	; 65
     640:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     644:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     648:	ee cd       	rjmp	.-1060   	; 0x226 <main+0x30>
			}
			else if(PB0_state==6)
     64a:	86 30       	cpi	r24, 0x06	; 6
     64c:	29 f5       	brne	.+74     	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
			{
				LED_OFF(Port_A, PIN_0);
     64e:	60 e0       	ldi	r22, 0x00	; 0
     650:	81 e4       	ldi	r24, 0x41	; 65
     652:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     656:	61 e0       	ldi	r22, 0x01	; 1
     658:	81 e4       	ldi	r24, 0x41	; 65
     65a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_2);
     65e:	62 e0       	ldi	r22, 0x02	; 2
     660:	81 e4       	ldi	r24, 0x41	; 65
     662:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     666:	63 e0       	ldi	r22, 0x03	; 3
     668:	81 e4       	ldi	r24, 0x41	; 65
     66a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_200ms();
     66e:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     672:	60 e0       	ldi	r22, 0x00	; 0
     674:	81 e4       	ldi	r24, 0x41	; 65
     676:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	81 e4       	ldi	r24, 0x41	; 65
     67e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     682:	62 e0       	ldi	r22, 0x02	; 2
     684:	81 e4       	ldi	r24, 0x41	; 65
     686:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     68a:	63 e0       	ldi	r22, 0x03	; 3
     68c:	81 e4       	ldi	r24, 0x41	; 65
     68e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     692:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     696:	c7 cd       	rjmp	.-1138   	; 0x226 <main+0x30>
			}
			else if(PB0_state==7)
     698:	87 30       	cpi	r24, 0x07	; 7
     69a:	09 f0       	breq	.+2      	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
     69c:	c4 cd       	rjmp	.-1144   	; 0x226 <main+0x30>
			{
				LED_OFF(Port_A, PIN_0);
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	81 e4       	ldi	r24, 0x41	; 65
     6a2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	81 e4       	ldi	r24, 0x41	; 65
     6aa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     6ae:	62 e0       	ldi	r22, 0x02	; 2
     6b0:	81 e4       	ldi	r24, 0x41	; 65
     6b2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_3);
     6b6:	63 e0       	ldi	r22, 0x03	; 3
     6b8:	81 e4       	ldi	r24, 0x41	; 65
     6ba:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_200ms();
     6be:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
				LED_OFF(Port_A, PIN_0);
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	81 e4       	ldi	r24, 0x41	; 65
     6c6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     6ca:	61 e0       	ldi	r22, 0x01	; 1
     6cc:	81 e4       	ldi	r24, 0x41	; 65
     6ce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     6d2:	62 e0       	ldi	r22, 0x02	; 2
     6d4:	81 e4       	ldi	r24, 0x41	; 65
     6d6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     6da:	63 e0       	ldi	r22, 0x03	; 3
     6dc:	81 e4       	ldi	r24, 0x41	; 65
     6de:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     6e2:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
     6e6:	9f cd       	rjmp	.-1218   	; 0x226 <main+0x30>
			}
			break;
			case 3:
			if(PB0_state==0)
     6e8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     6ec:	81 11       	cpse	r24, r1
     6ee:	11 c0       	rjmp	.+34     	; 0x712 <__EEPROM_REGION_LENGTH__+0x312>
			{
				LED_OFF(Port_A, PIN_0);
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	81 e4       	ldi	r24, 0x41	; 65
     6f4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	81 e4       	ldi	r24, 0x41	; 65
     6fc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     700:	62 e0       	ldi	r22, 0x02	; 2
     702:	81 e4       	ldi	r24, 0x41	; 65
     704:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     708:	63 e0       	ldi	r22, 0x03	; 3
     70a:	81 e4       	ldi	r24, 0x41	; 65
     70c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
     710:	8a cd       	rjmp	.-1260   	; 0x226 <main+0x30>
			}
			else if(PB0_state==1)
     712:	81 30       	cpi	r24, 0x01	; 1
     714:	29 f5       	brne	.+74     	; 0x760 <__EEPROM_REGION_LENGTH__+0x360>
			{
				LED_ON(Port_A, PIN_0);
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	81 e4       	ldi	r24, 0x41	; 65
     71a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_1);
     71e:	61 e0       	ldi	r22, 0x01	; 1
     720:	81 e4       	ldi	r24, 0x41	; 65
     722:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     726:	62 e0       	ldi	r22, 0x02	; 2
     728:	81 e4       	ldi	r24, 0x41	; 65
     72a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     72e:	63 e0       	ldi	r22, 0x03	; 3
     730:	81 e4       	ldi	r24, 0x41	; 65
     732:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_300ms();
     736:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	81 e4       	ldi	r24, 0x41	; 65
     73e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     742:	61 e0       	ldi	r22, 0x01	; 1
     744:	81 e4       	ldi	r24, 0x41	; 65
     746:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     74a:	62 e0       	ldi	r22, 0x02	; 2
     74c:	81 e4       	ldi	r24, 0x41	; 65
     74e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     752:	63 e0       	ldi	r22, 0x03	; 3
     754:	81 e4       	ldi	r24, 0x41	; 65
     756:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     75a:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     75e:	63 cd       	rjmp	.-1338   	; 0x226 <main+0x30>
			}
			else if(PB0_state==2)
     760:	82 30       	cpi	r24, 0x02	; 2
     762:	29 f5       	brne	.+74     	; 0x7ae <__EEPROM_REGION_LENGTH__+0x3ae>
			{
				LED_ON(Port_A, PIN_0);
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	81 e4       	ldi	r24, 0x41	; 65
     768:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     76c:	61 e0       	ldi	r22, 0x01	; 1
     76e:	81 e4       	ldi	r24, 0x41	; 65
     770:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_2);
     774:	62 e0       	ldi	r22, 0x02	; 2
     776:	81 e4       	ldi	r24, 0x41	; 65
     778:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     77c:	63 e0       	ldi	r22, 0x03	; 3
     77e:	81 e4       	ldi	r24, 0x41	; 65
     780:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_300ms();
     784:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	81 e4       	ldi	r24, 0x41	; 65
     78c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	81 e4       	ldi	r24, 0x41	; 65
     794:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     798:	62 e0       	ldi	r22, 0x02	; 2
     79a:	81 e4       	ldi	r24, 0x41	; 65
     79c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     7a0:	63 e0       	ldi	r22, 0x03	; 3
     7a2:	81 e4       	ldi	r24, 0x41	; 65
     7a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     7a8:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     7ac:	3c cd       	rjmp	.-1416   	; 0x226 <main+0x30>
			}
			else if(PB0_state==3)
     7ae:	83 30       	cpi	r24, 0x03	; 3
     7b0:	29 f5       	brne	.+74     	; 0x7fc <__EEPROM_REGION_LENGTH__+0x3fc>
			{
				LED_ON(Port_A, PIN_0);
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	81 e4       	ldi	r24, 0x41	; 65
     7b6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     7ba:	61 e0       	ldi	r22, 0x01	; 1
     7bc:	81 e4       	ldi	r24, 0x41	; 65
     7be:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     7c2:	62 e0       	ldi	r22, 0x02	; 2
     7c4:	81 e4       	ldi	r24, 0x41	; 65
     7c6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_3);
     7ca:	63 e0       	ldi	r22, 0x03	; 3
     7cc:	81 e4       	ldi	r24, 0x41	; 65
     7ce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_300ms();
     7d2:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	81 e4       	ldi	r24, 0x41	; 65
     7da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	81 e4       	ldi	r24, 0x41	; 65
     7e2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     7e6:	62 e0       	ldi	r22, 0x02	; 2
     7e8:	81 e4       	ldi	r24, 0x41	; 65
     7ea:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     7ee:	63 e0       	ldi	r22, 0x03	; 3
     7f0:	81 e4       	ldi	r24, 0x41	; 65
     7f2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     7f6:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     7fa:	15 cd       	rjmp	.-1494   	; 0x226 <main+0x30>
			}
			else if(PB0_state==4)
     7fc:	84 30       	cpi	r24, 0x04	; 4
     7fe:	29 f5       	brne	.+74     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
			{
				LED_ON(Port_A, PIN_0);
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	81 e4       	ldi	r24, 0x41	; 65
     804:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     808:	61 e0       	ldi	r22, 0x01	; 1
     80a:	81 e4       	ldi	r24, 0x41	; 65
     80c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     810:	62 e0       	ldi	r22, 0x02	; 2
     812:	81 e4       	ldi	r24, 0x41	; 65
     814:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     818:	63 e0       	ldi	r22, 0x03	; 3
     81a:	81 e4       	ldi	r24, 0x41	; 65
     81c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_300ms();
     820:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	81 e4       	ldi	r24, 0x41	; 65
     828:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     82c:	61 e0       	ldi	r22, 0x01	; 1
     82e:	81 e4       	ldi	r24, 0x41	; 65
     830:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     834:	62 e0       	ldi	r22, 0x02	; 2
     836:	81 e4       	ldi	r24, 0x41	; 65
     838:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     83c:	63 e0       	ldi	r22, 0x03	; 3
     83e:	81 e4       	ldi	r24, 0x41	; 65
     840:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     844:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     848:	ee cc       	rjmp	.-1572   	; 0x226 <main+0x30>
			}
			else if(PB0_state==5)
     84a:	85 30       	cpi	r24, 0x05	; 5
     84c:	29 f5       	brne	.+74     	; 0x898 <__stack+0x39>
			{
				LED_OFF(Port_A, PIN_0);
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	81 e4       	ldi	r24, 0x41	; 65
     852:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_1);
     856:	61 e0       	ldi	r22, 0x01	; 1
     858:	81 e4       	ldi	r24, 0x41	; 65
     85a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     85e:	62 e0       	ldi	r22, 0x02	; 2
     860:	81 e4       	ldi	r24, 0x41	; 65
     862:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     866:	63 e0       	ldi	r22, 0x03	; 3
     868:	81 e4       	ldi	r24, 0x41	; 65
     86a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_300ms();
     86e:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	81 e4       	ldi	r24, 0x41	; 65
     876:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     87a:	61 e0       	ldi	r22, 0x01	; 1
     87c:	81 e4       	ldi	r24, 0x41	; 65
     87e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     882:	62 e0       	ldi	r22, 0x02	; 2
     884:	81 e4       	ldi	r24, 0x41	; 65
     886:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     88a:	63 e0       	ldi	r22, 0x03	; 3
     88c:	81 e4       	ldi	r24, 0x41	; 65
     88e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     892:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     896:	c7 cc       	rjmp	.-1650   	; 0x226 <main+0x30>
			}
			else if(PB0_state==6)
     898:	86 30       	cpi	r24, 0x06	; 6
     89a:	29 f5       	brne	.+74     	; 0x8e6 <__stack+0x87>
			{
				LED_OFF(Port_A, PIN_0);
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	81 e4       	ldi	r24, 0x41	; 65
     8a0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	81 e4       	ldi	r24, 0x41	; 65
     8a8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_2);
     8ac:	62 e0       	ldi	r22, 0x02	; 2
     8ae:	81 e4       	ldi	r24, 0x41	; 65
     8b0:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     8b4:	63 e0       	ldi	r22, 0x03	; 3
     8b6:	81 e4       	ldi	r24, 0x41	; 65
     8b8:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_300ms();
     8bc:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	81 e4       	ldi	r24, 0x41	; 65
     8c4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     8c8:	61 e0       	ldi	r22, 0x01	; 1
     8ca:	81 e4       	ldi	r24, 0x41	; 65
     8cc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     8d0:	62 e0       	ldi	r22, 0x02	; 2
     8d2:	81 e4       	ldi	r24, 0x41	; 65
     8d4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     8d8:	63 e0       	ldi	r22, 0x03	; 3
     8da:	81 e4       	ldi	r24, 0x41	; 65
     8dc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     8e0:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     8e4:	a0 cc       	rjmp	.-1728   	; 0x226 <main+0x30>
			}
			else if(PB0_state==7)
     8e6:	87 30       	cpi	r24, 0x07	; 7
     8e8:	09 f0       	breq	.+2      	; 0x8ec <__stack+0x8d>
     8ea:	9d cc       	rjmp	.-1734   	; 0x226 <main+0x30>
			{
				LED_OFF(Port_A, PIN_0);
     8ec:	60 e0       	ldi	r22, 0x00	; 0
     8ee:	81 e4       	ldi	r24, 0x41	; 65
     8f0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     8f4:	61 e0       	ldi	r22, 0x01	; 1
     8f6:	81 e4       	ldi	r24, 0x41	; 65
     8f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     8fc:	62 e0       	ldi	r22, 0x02	; 2
     8fe:	81 e4       	ldi	r24, 0x41	; 65
     900:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_3);
     904:	63 e0       	ldi	r22, 0x03	; 3
     906:	81 e4       	ldi	r24, 0x41	; 65
     908:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_300ms();
     90c:	0e 94 96 00 	call	0x12c	; 0x12c <delay_300ms>
				LED_OFF(Port_A, PIN_0);
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	81 e4       	ldi	r24, 0x41	; 65
     914:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     918:	61 e0       	ldi	r22, 0x01	; 1
     91a:	81 e4       	ldi	r24, 0x41	; 65
     91c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     920:	62 e0       	ldi	r22, 0x02	; 2
     922:	81 e4       	ldi	r24, 0x41	; 65
     924:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     928:	63 e0       	ldi	r22, 0x03	; 3
     92a:	81 e4       	ldi	r24, 0x41	; 65
     92c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_700ms();
     930:	0e 94 aa 00 	call	0x154	; 0x154 <delay_700ms>
     934:	78 cc       	rjmp	.-1808   	; 0x226 <main+0x30>
			}
			break;
			case 4:
			if(PB0_state==0)
     936:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     93a:	81 11       	cpse	r24, r1
     93c:	11 c0       	rjmp	.+34     	; 0x960 <__stack+0x101>
			{
				LED_OFF(Port_A, PIN_0);
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	81 e4       	ldi	r24, 0x41	; 65
     942:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     946:	61 e0       	ldi	r22, 0x01	; 1
     948:	81 e4       	ldi	r24, 0x41	; 65
     94a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     94e:	62 e0       	ldi	r22, 0x02	; 2
     950:	81 e4       	ldi	r24, 0x41	; 65
     952:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     956:	63 e0       	ldi	r22, 0x03	; 3
     958:	81 e4       	ldi	r24, 0x41	; 65
     95a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
     95e:	63 cc       	rjmp	.-1850   	; 0x226 <main+0x30>
			}
			else if(PB0_state==1)
     960:	81 30       	cpi	r24, 0x01	; 1
     962:	29 f5       	brne	.+74     	; 0x9ae <__stack+0x14f>
			{
				LED_ON(Port_A, PIN_0);
     964:	60 e0       	ldi	r22, 0x00	; 0
     966:	81 e4       	ldi	r24, 0x41	; 65
     968:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_1);
     96c:	61 e0       	ldi	r22, 0x01	; 1
     96e:	81 e4       	ldi	r24, 0x41	; 65
     970:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     974:	62 e0       	ldi	r22, 0x02	; 2
     976:	81 e4       	ldi	r24, 0x41	; 65
     978:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     97c:	63 e0       	ldi	r22, 0x03	; 3
     97e:	81 e4       	ldi	r24, 0x41	; 65
     980:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     984:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	81 e4       	ldi	r24, 0x41	; 65
     98c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     990:	61 e0       	ldi	r22, 0x01	; 1
     992:	81 e4       	ldi	r24, 0x41	; 65
     994:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     998:	62 e0       	ldi	r22, 0x02	; 2
     99a:	81 e4       	ldi	r24, 0x41	; 65
     99c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     9a0:	63 e0       	ldi	r22, 0x03	; 3
     9a2:	81 e4       	ldi	r24, 0x41	; 65
     9a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     9a8:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     9ac:	3c cc       	rjmp	.-1928   	; 0x226 <main+0x30>
			}
			else if(PB0_state==2)
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	29 f5       	brne	.+74     	; 0x9fc <__stack+0x19d>
			{
				LED_ON(Port_A, PIN_0);
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	81 e4       	ldi	r24, 0x41	; 65
     9b6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     9ba:	61 e0       	ldi	r22, 0x01	; 1
     9bc:	81 e4       	ldi	r24, 0x41	; 65
     9be:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_2);
     9c2:	62 e0       	ldi	r22, 0x02	; 2
     9c4:	81 e4       	ldi	r24, 0x41	; 65
     9c6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     9ca:	63 e0       	ldi	r22, 0x03	; 3
     9cc:	81 e4       	ldi	r24, 0x41	; 65
     9ce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     9d2:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     9d6:	60 e0       	ldi	r22, 0x00	; 0
     9d8:	81 e4       	ldi	r24, 0x41	; 65
     9da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     9de:	61 e0       	ldi	r22, 0x01	; 1
     9e0:	81 e4       	ldi	r24, 0x41	; 65
     9e2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     9e6:	62 e0       	ldi	r22, 0x02	; 2
     9e8:	81 e4       	ldi	r24, 0x41	; 65
     9ea:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     9ee:	63 e0       	ldi	r22, 0x03	; 3
     9f0:	81 e4       	ldi	r24, 0x41	; 65
     9f2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     9f6:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     9fa:	15 cc       	rjmp	.-2006   	; 0x226 <main+0x30>
			}
			else if(PB0_state==3)
     9fc:	83 30       	cpi	r24, 0x03	; 3
     9fe:	29 f5       	brne	.+74     	; 0xa4a <__stack+0x1eb>
			{
				LED_ON(Port_A, PIN_0);
     a00:	60 e0       	ldi	r22, 0x00	; 0
     a02:	81 e4       	ldi	r24, 0x41	; 65
     a04:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     a08:	61 e0       	ldi	r22, 0x01	; 1
     a0a:	81 e4       	ldi	r24, 0x41	; 65
     a0c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     a10:	62 e0       	ldi	r22, 0x02	; 2
     a12:	81 e4       	ldi	r24, 0x41	; 65
     a14:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_3);
     a18:	63 e0       	ldi	r22, 0x03	; 3
     a1a:	81 e4       	ldi	r24, 0x41	; 65
     a1c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     a20:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	81 e4       	ldi	r24, 0x41	; 65
     a28:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     a2c:	61 e0       	ldi	r22, 0x01	; 1
     a2e:	81 e4       	ldi	r24, 0x41	; 65
     a30:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     a34:	62 e0       	ldi	r22, 0x02	; 2
     a36:	81 e4       	ldi	r24, 0x41	; 65
     a38:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     a3c:	63 e0       	ldi	r22, 0x03	; 3
     a3e:	81 e4       	ldi	r24, 0x41	; 65
     a40:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     a44:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     a48:	ee cb       	rjmp	.-2084   	; 0x226 <main+0x30>
			}
			else if(PB0_state==4)
     a4a:	84 30       	cpi	r24, 0x04	; 4
     a4c:	29 f5       	brne	.+74     	; 0xa98 <__stack+0x239>
			{
				LED_ON(Port_A, PIN_0);
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	81 e4       	ldi	r24, 0x41	; 65
     a52:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     a56:	61 e0       	ldi	r22, 0x01	; 1
     a58:	81 e4       	ldi	r24, 0x41	; 65
     a5a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     a5e:	62 e0       	ldi	r22, 0x02	; 2
     a60:	81 e4       	ldi	r24, 0x41	; 65
     a62:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     a66:	63 e0       	ldi	r22, 0x03	; 3
     a68:	81 e4       	ldi	r24, 0x41	; 65
     a6a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_500ms();
     a6e:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	81 e4       	ldi	r24, 0x41	; 65
     a76:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     a7a:	61 e0       	ldi	r22, 0x01	; 1
     a7c:	81 e4       	ldi	r24, 0x41	; 65
     a7e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     a82:	62 e0       	ldi	r22, 0x02	; 2
     a84:	81 e4       	ldi	r24, 0x41	; 65
     a86:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     a8a:	63 e0       	ldi	r22, 0x03	; 3
     a8c:	81 e4       	ldi	r24, 0x41	; 65
     a8e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     a92:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     a96:	c7 cb       	rjmp	.-2162   	; 0x226 <main+0x30>
			}
			else if(PB0_state==5)
     a98:	85 30       	cpi	r24, 0x05	; 5
     a9a:	29 f5       	brne	.+74     	; 0xae6 <__stack+0x287>
			{
				LED_OFF(Port_A, PIN_0);
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	81 e4       	ldi	r24, 0x41	; 65
     aa0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_1);
     aa4:	61 e0       	ldi	r22, 0x01	; 1
     aa6:	81 e4       	ldi	r24, 0x41	; 65
     aa8:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     aac:	62 e0       	ldi	r22, 0x02	; 2
     aae:	81 e4       	ldi	r24, 0x41	; 65
     ab0:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     ab4:	63 e0       	ldi	r22, 0x03	; 3
     ab6:	81 e4       	ldi	r24, 0x41	; 65
     ab8:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_500ms();
     abc:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     ac0:	60 e0       	ldi	r22, 0x00	; 0
     ac2:	81 e4       	ldi	r24, 0x41	; 65
     ac4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	81 e4       	ldi	r24, 0x41	; 65
     acc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     ad0:	62 e0       	ldi	r22, 0x02	; 2
     ad2:	81 e4       	ldi	r24, 0x41	; 65
     ad4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     ad8:	63 e0       	ldi	r22, 0x03	; 3
     ada:	81 e4       	ldi	r24, 0x41	; 65
     adc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     ae0:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     ae4:	a0 cb       	rjmp	.-2240   	; 0x226 <main+0x30>
			}
			else if(PB0_state==6)
     ae6:	86 30       	cpi	r24, 0x06	; 6
     ae8:	29 f5       	brne	.+74     	; 0xb34 <__stack+0x2d5>
			{
				LED_OFF(Port_A, PIN_0);
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	81 e4       	ldi	r24, 0x41	; 65
     aee:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     af2:	61 e0       	ldi	r22, 0x01	; 1
     af4:	81 e4       	ldi	r24, 0x41	; 65
     af6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_2);
     afa:	62 e0       	ldi	r22, 0x02	; 2
     afc:	81 e4       	ldi	r24, 0x41	; 65
     afe:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     b02:	63 e0       	ldi	r22, 0x03	; 3
     b04:	81 e4       	ldi	r24, 0x41	; 65
     b06:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_500ms();
     b0a:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     b0e:	60 e0       	ldi	r22, 0x00	; 0
     b10:	81 e4       	ldi	r24, 0x41	; 65
     b12:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     b16:	61 e0       	ldi	r22, 0x01	; 1
     b18:	81 e4       	ldi	r24, 0x41	; 65
     b1a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     b1e:	62 e0       	ldi	r22, 0x02	; 2
     b20:	81 e4       	ldi	r24, 0x41	; 65
     b22:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     b26:	63 e0       	ldi	r22, 0x03	; 3
     b28:	81 e4       	ldi	r24, 0x41	; 65
     b2a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     b2e:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     b32:	79 cb       	rjmp	.-2318   	; 0x226 <main+0x30>
			}
			else if(PB0_state==7)
     b34:	87 30       	cpi	r24, 0x07	; 7
     b36:	09 f0       	breq	.+2      	; 0xb3a <__stack+0x2db>
     b38:	76 cb       	rjmp	.-2324   	; 0x226 <main+0x30>
			{
				LED_OFF(Port_A, PIN_0);
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	81 e4       	ldi	r24, 0x41	; 65
     b3e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     b42:	61 e0       	ldi	r22, 0x01	; 1
     b44:	81 e4       	ldi	r24, 0x41	; 65
     b46:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     b4a:	62 e0       	ldi	r22, 0x02	; 2
     b4c:	81 e4       	ldi	r24, 0x41	; 65
     b4e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_3);
     b52:	63 e0       	ldi	r22, 0x03	; 3
     b54:	81 e4       	ldi	r24, 0x41	; 65
     b56:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_500ms();
     b5a:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
				LED_OFF(Port_A, PIN_0);
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	81 e4       	ldi	r24, 0x41	; 65
     b62:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     b66:	61 e0       	ldi	r22, 0x01	; 1
     b68:	81 e4       	ldi	r24, 0x41	; 65
     b6a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     b6e:	62 e0       	ldi	r22, 0x02	; 2
     b70:	81 e4       	ldi	r24, 0x41	; 65
     b72:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     b76:	63 e0       	ldi	r22, 0x03	; 3
     b78:	81 e4       	ldi	r24, 0x41	; 65
     b7a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_500ms();
     b7e:	0e 94 be 00 	call	0x17c	; 0x17c <delay_500ms>
     b82:	51 cb       	rjmp	.-2398   	; 0x226 <main+0x30>
			}
			break;
			case 5:
			if(PB0_state==0)
     b84:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     b88:	81 11       	cpse	r24, r1
     b8a:	11 c0       	rjmp	.+34     	; 0xbae <__stack+0x34f>
			{
				LED_OFF(Port_A, PIN_0);
     b8c:	60 e0       	ldi	r22, 0x00	; 0
     b8e:	81 e4       	ldi	r24, 0x41	; 65
     b90:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     b94:	61 e0       	ldi	r22, 0x01	; 1
     b96:	81 e4       	ldi	r24, 0x41	; 65
     b98:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     b9c:	62 e0       	ldi	r22, 0x02	; 2
     b9e:	81 e4       	ldi	r24, 0x41	; 65
     ba0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     ba4:	63 e0       	ldi	r22, 0x03	; 3
     ba6:	81 e4       	ldi	r24, 0x41	; 65
     ba8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
     bac:	3c cb       	rjmp	.-2440   	; 0x226 <main+0x30>
			}
			else if(PB0_state==1)
     bae:	81 30       	cpi	r24, 0x01	; 1
     bb0:	29 f5       	brne	.+74     	; 0xbfc <__stack+0x39d>
			{
				LED_ON(Port_A, PIN_0);
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	81 e4       	ldi	r24, 0x41	; 65
     bb6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_1);
     bba:	61 e0       	ldi	r22, 0x01	; 1
     bbc:	81 e4       	ldi	r24, 0x41	; 65
     bbe:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     bc2:	62 e0       	ldi	r22, 0x02	; 2
     bc4:	81 e4       	ldi	r24, 0x41	; 65
     bc6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     bca:	63 e0       	ldi	r22, 0x03	; 3
     bcc:	81 e4       	ldi	r24, 0x41	; 65
     bce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     bd2:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	81 e4       	ldi	r24, 0x41	; 65
     bda:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     bde:	61 e0       	ldi	r22, 0x01	; 1
     be0:	81 e4       	ldi	r24, 0x41	; 65
     be2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     be6:	62 e0       	ldi	r22, 0x02	; 2
     be8:	81 e4       	ldi	r24, 0x41	; 65
     bea:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     bee:	63 e0       	ldi	r22, 0x03	; 3
     bf0:	81 e4       	ldi	r24, 0x41	; 65
     bf2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     bf6:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     bfa:	15 cb       	rjmp	.-2518   	; 0x226 <main+0x30>
			}
			else if(PB0_state==2)
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	29 f5       	brne	.+74     	; 0xc4a <__stack+0x3eb>
			{
				LED_ON(Port_A, PIN_0);
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	81 e4       	ldi	r24, 0x41	; 65
     c04:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     c08:	61 e0       	ldi	r22, 0x01	; 1
     c0a:	81 e4       	ldi	r24, 0x41	; 65
     c0c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_2);
     c10:	62 e0       	ldi	r22, 0x02	; 2
     c12:	81 e4       	ldi	r24, 0x41	; 65
     c14:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     c18:	63 e0       	ldi	r22, 0x03	; 3
     c1a:	81 e4       	ldi	r24, 0x41	; 65
     c1c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     c20:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     c24:	60 e0       	ldi	r22, 0x00	; 0
     c26:	81 e4       	ldi	r24, 0x41	; 65
     c28:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     c2c:	61 e0       	ldi	r22, 0x01	; 1
     c2e:	81 e4       	ldi	r24, 0x41	; 65
     c30:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     c34:	62 e0       	ldi	r22, 0x02	; 2
     c36:	81 e4       	ldi	r24, 0x41	; 65
     c38:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     c3c:	63 e0       	ldi	r22, 0x03	; 3
     c3e:	81 e4       	ldi	r24, 0x41	; 65
     c40:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     c44:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     c48:	ee ca       	rjmp	.-2596   	; 0x226 <main+0x30>
			}
			else if(PB0_state==3)
     c4a:	83 30       	cpi	r24, 0x03	; 3
     c4c:	29 f5       	brne	.+74     	; 0xc98 <__stack+0x439>
			{
				LED_ON(Port_A, PIN_0);
     c4e:	60 e0       	ldi	r22, 0x00	; 0
     c50:	81 e4       	ldi	r24, 0x41	; 65
     c52:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     c56:	61 e0       	ldi	r22, 0x01	; 1
     c58:	81 e4       	ldi	r24, 0x41	; 65
     c5a:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     c5e:	62 e0       	ldi	r22, 0x02	; 2
     c60:	81 e4       	ldi	r24, 0x41	; 65
     c62:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_OFF(Port_A, PIN_3);
     c66:	63 e0       	ldi	r22, 0x03	; 3
     c68:	81 e4       	ldi	r24, 0x41	; 65
     c6a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_800ms();
     c6e:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	81 e4       	ldi	r24, 0x41	; 65
     c76:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	81 e4       	ldi	r24, 0x41	; 65
     c7e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     c82:	62 e0       	ldi	r22, 0x02	; 2
     c84:	81 e4       	ldi	r24, 0x41	; 65
     c86:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     c8a:	63 e0       	ldi	r22, 0x03	; 3
     c8c:	81 e4       	ldi	r24, 0x41	; 65
     c8e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     c92:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     c96:	c7 ca       	rjmp	.-2674   	; 0x226 <main+0x30>
			}
			else if(PB0_state==4)
     c98:	84 30       	cpi	r24, 0x04	; 4
     c9a:	29 f5       	brne	.+74     	; 0xce6 <__stack+0x487>
			{
				LED_ON(Port_A, PIN_0);
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	81 e4       	ldi	r24, 0x41	; 65
     ca0:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_1);
     ca4:	61 e0       	ldi	r22, 0x01	; 1
     ca6:	81 e4       	ldi	r24, 0x41	; 65
     ca8:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     cac:	62 e0       	ldi	r22, 0x02	; 2
     cae:	81 e4       	ldi	r24, 0x41	; 65
     cb0:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     cb4:	63 e0       	ldi	r22, 0x03	; 3
     cb6:	81 e4       	ldi	r24, 0x41	; 65
     cb8:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_800ms();
     cbc:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	81 e4       	ldi	r24, 0x41	; 65
     cc4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     cc8:	61 e0       	ldi	r22, 0x01	; 1
     cca:	81 e4       	ldi	r24, 0x41	; 65
     ccc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     cd0:	62 e0       	ldi	r22, 0x02	; 2
     cd2:	81 e4       	ldi	r24, 0x41	; 65
     cd4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     cd8:	63 e0       	ldi	r22, 0x03	; 3
     cda:	81 e4       	ldi	r24, 0x41	; 65
     cdc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     ce0:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     ce4:	a0 ca       	rjmp	.-2752   	; 0x226 <main+0x30>
			}
			else if(PB0_state==5)
     ce6:	85 30       	cpi	r24, 0x05	; 5
     ce8:	29 f5       	brne	.+74     	; 0xd34 <__stack+0x4d5>
			{
				LED_OFF(Port_A, PIN_0);
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	81 e4       	ldi	r24, 0x41	; 65
     cee:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_1);
     cf2:	61 e0       	ldi	r22, 0x01	; 1
     cf4:	81 e4       	ldi	r24, 0x41	; 65
     cf6:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_2);
     cfa:	62 e0       	ldi	r22, 0x02	; 2
     cfc:	81 e4       	ldi	r24, 0x41	; 65
     cfe:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     d02:	63 e0       	ldi	r22, 0x03	; 3
     d04:	81 e4       	ldi	r24, 0x41	; 65
     d06:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_800ms();
     d0a:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     d0e:	60 e0       	ldi	r22, 0x00	; 0
     d10:	81 e4       	ldi	r24, 0x41	; 65
     d12:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     d16:	61 e0       	ldi	r22, 0x01	; 1
     d18:	81 e4       	ldi	r24, 0x41	; 65
     d1a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     d1e:	62 e0       	ldi	r22, 0x02	; 2
     d20:	81 e4       	ldi	r24, 0x41	; 65
     d22:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     d26:	63 e0       	ldi	r22, 0x03	; 3
     d28:	81 e4       	ldi	r24, 0x41	; 65
     d2a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     d2e:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     d32:	79 ca       	rjmp	.-2830   	; 0x226 <main+0x30>
			}
			else if(PB0_state==6)
     d34:	86 30       	cpi	r24, 0x06	; 6
     d36:	29 f5       	brne	.+74     	; 0xd82 <__stack+0x523>
			{
				LED_OFF(Port_A, PIN_0);
     d38:	60 e0       	ldi	r22, 0x00	; 0
     d3a:	81 e4       	ldi	r24, 0x41	; 65
     d3c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     d40:	61 e0       	ldi	r22, 0x01	; 1
     d42:	81 e4       	ldi	r24, 0x41	; 65
     d44:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_2);
     d48:	62 e0       	ldi	r22, 0x02	; 2
     d4a:	81 e4       	ldi	r24, 0x41	; 65
     d4c:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				LED_ON(Port_A, PIN_3);
     d50:	63 e0       	ldi	r22, 0x03	; 3
     d52:	81 e4       	ldi	r24, 0x41	; 65
     d54:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_800ms();
     d58:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     d5c:	60 e0       	ldi	r22, 0x00	; 0
     d5e:	81 e4       	ldi	r24, 0x41	; 65
     d60:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     d64:	61 e0       	ldi	r22, 0x01	; 1
     d66:	81 e4       	ldi	r24, 0x41	; 65
     d68:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     d6c:	62 e0       	ldi	r22, 0x02	; 2
     d6e:	81 e4       	ldi	r24, 0x41	; 65
     d70:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     d74:	63 e0       	ldi	r22, 0x03	; 3
     d76:	81 e4       	ldi	r24, 0x41	; 65
     d78:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     d7c:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     d80:	52 ca       	rjmp	.-2908   	; 0x226 <main+0x30>
			}
			else if(PB0_state==7)
     d82:	87 30       	cpi	r24, 0x07	; 7
     d84:	09 f0       	breq	.+2      	; 0xd88 <__stack+0x529>
     d86:	4f ca       	rjmp	.-2914   	; 0x226 <main+0x30>
			{
				LED_OFF(Port_A, PIN_0);
     d88:	60 e0       	ldi	r22, 0x00	; 0
     d8a:	81 e4       	ldi	r24, 0x41	; 65
     d8c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     d90:	61 e0       	ldi	r22, 0x01	; 1
     d92:	81 e4       	ldi	r24, 0x41	; 65
     d94:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     d98:	62 e0       	ldi	r22, 0x02	; 2
     d9a:	81 e4       	ldi	r24, 0x41	; 65
     d9c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_ON(Port_A, PIN_3);
     da0:	63 e0       	ldi	r22, 0x03	; 3
     da2:	81 e4       	ldi	r24, 0x41	; 65
     da4:	0e 94 ef 00 	call	0x1de	; 0x1de <LED_ON>
				delay_800ms();
     da8:	0e 94 83 00 	call	0x106	; 0x106 <delay_800ms>
				LED_OFF(Port_A, PIN_0);
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	81 e4       	ldi	r24, 0x41	; 65
     db0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_1);
     db4:	61 e0       	ldi	r22, 0x01	; 1
     db6:	81 e4       	ldi	r24, 0x41	; 65
     db8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_2);
     dbc:	62 e0       	ldi	r22, 0x02	; 2
     dbe:	81 e4       	ldi	r24, 0x41	; 65
     dc0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				LED_OFF(Port_A, PIN_3);
     dc4:	63 e0       	ldi	r22, 0x03	; 3
     dc6:	81 e4       	ldi	r24, 0x41	; 65
     dc8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LED_OFF>
				delay_200ms();
     dcc:	0e 94 70 00 	call	0xe0	; 0xe0 <delay_200ms>
     dd0:	2a ca       	rjmp	.-2988   	; 0x226 <main+0x30>

00000dd2 <__vector_1>:
   
   
}

ISR(__vector_1)
{
     dd2:	1f 92       	push	r1
     dd4:	0f 92       	push	r0
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	0f 92       	push	r0
     dda:	11 24       	eor	r1, r1
     ddc:	8f 93       	push	r24
	if(PB0_state<7)
     dde:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <PB0_state>
     de2:	87 30       	cpi	r24, 0x07	; 7
     de4:	20 f4       	brcc	.+8      	; 0xdee <__vector_1+0x1c>
		PB0_state++;
     de6:	8f 5f       	subi	r24, 0xFF	; 255
     de8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <PB0_state>
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <__vector_1+0x20>
	else
	PB0_state=0;
     dee:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <PB0_state>
}
     df2:	8f 91       	pop	r24
     df4:	0f 90       	pop	r0
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	0f 90       	pop	r0
     dfa:	1f 90       	pop	r1
     dfc:	18 95       	reti

00000dfe <__vector_2>:

ISR(__vector_2)
{
     dfe:	1f 92       	push	r1
     e00:	0f 92       	push	r0
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	0f 92       	push	r0
     e06:	11 24       	eor	r1, r1
     e08:	8f 93       	push	r24
	if(Blink_state<5)
     e0a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     e0e:	85 30       	cpi	r24, 0x05	; 5
     e10:	20 f4       	brcc	.+8      	; 0xe1a <__vector_2+0x1c>
	Blink_state++;
     e12:	8f 5f       	subi	r24, 0xFF	; 255
     e14:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     e18:	03 c0       	rjmp	.+6      	; 0xe20 <__vector_2+0x22>
	else
	Blink_state=1;
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     e20:	8f 91       	pop	r24
     e22:	0f 90       	pop	r0
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	0f 90       	pop	r0
     e28:	1f 90       	pop	r1
     e2a:	18 95       	reti

00000e2c <DIO_init>:
#include "DIO.h"

uint8_t DIO_init(uint8_t PORTNumber, uint8_t PinNumber, uint8_t direction)
{
	uint8_t error=0;
	switch(PORTNumber)
     e2c:	82 34       	cpi	r24, 0x42	; 66
     e2e:	31 f1       	breq	.+76     	; 0xe7c <DIO_init+0x50>
     e30:	18 f4       	brcc	.+6      	; 0xe38 <DIO_init+0xc>
     e32:	81 34       	cpi	r24, 0x41	; 65
     e34:	39 f0       	breq	.+14     	; 0xe44 <DIO_init+0x18>
     e36:	73 c0       	rjmp	.+230    	; 0xf1e <DIO_init+0xf2>
     e38:	83 34       	cpi	r24, 0x43	; 67
     e3a:	e1 f1       	breq	.+120    	; 0xeb4 <DIO_init+0x88>
     e3c:	84 34       	cpi	r24, 0x44	; 68
     e3e:	09 f4       	brne	.+2      	; 0xe42 <DIO_init+0x16>
     e40:	54 c0       	rjmp	.+168    	; 0xeea <DIO_init+0xbe>
     e42:	6d c0       	rjmp	.+218    	; 0xf1e <DIO_init+0xf2>
	{
		uint8_t error=0;
		case Port_A:
			if(direction == in)
     e44:	41 11       	cpse	r20, r1
     e46:	0c c0       	rjmp	.+24     	; 0xe60 <DIO_init+0x34>
			Clear_Bit(DDRA,PinNumber);
     e48:	2a b3       	in	r18, 0x1a	; 26
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <DIO_init+0x28>
     e50:	88 0f       	add	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	6a 95       	dec	r22
     e56:	e2 f7       	brpl	.-8      	; 0xe50 <DIO_init+0x24>
     e58:	80 95       	com	r24
     e5a:	82 23       	and	r24, r18
     e5c:	8a bb       	out	0x1a, r24	; 26
     e5e:	5f c0       	rjmp	.+190    	; 0xf1e <DIO_init+0xf2>
			else if(direction == out)
     e60:	41 30       	cpi	r20, 0x01	; 1
     e62:	09 f0       	breq	.+2      	; 0xe66 <DIO_init+0x3a>
     e64:	5c c0       	rjmp	.+184    	; 0xf1e <DIO_init+0xf2>
			Set_Bit(DDRA,PinNumber);
     e66:	2a b3       	in	r18, 0x1a	; 26
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <DIO_init+0x46>
     e6e:	88 0f       	add	r24, r24
     e70:	99 1f       	adc	r25, r25
     e72:	6a 95       	dec	r22
     e74:	e2 f7       	brpl	.-8      	; 0xe6e <DIO_init+0x42>
     e76:	82 2b       	or	r24, r18
     e78:	8a bb       	out	0x1a, r24	; 26
     e7a:	51 c0       	rjmp	.+162    	; 0xf1e <DIO_init+0xf2>
			else
			error=1;
			break;
		case Port_B:
			if(direction == in)
     e7c:	41 11       	cpse	r20, r1
     e7e:	0c c0       	rjmp	.+24     	; 0xe98 <DIO_init+0x6c>
			Clear_Bit(DDRB,PinNumber);
     e80:	27 b3       	in	r18, 0x17	; 23
     e82:	81 e0       	ldi	r24, 0x01	; 1
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <DIO_init+0x60>
     e88:	88 0f       	add	r24, r24
     e8a:	99 1f       	adc	r25, r25
     e8c:	6a 95       	dec	r22
     e8e:	e2 f7       	brpl	.-8      	; 0xe88 <DIO_init+0x5c>
     e90:	80 95       	com	r24
     e92:	82 23       	and	r24, r18
     e94:	87 bb       	out	0x17, r24	; 23
     e96:	43 c0       	rjmp	.+134    	; 0xf1e <DIO_init+0xf2>
			else if(direction == out)
     e98:	41 30       	cpi	r20, 0x01	; 1
     e9a:	09 f0       	breq	.+2      	; 0xe9e <DIO_init+0x72>
     e9c:	40 c0       	rjmp	.+128    	; 0xf1e <DIO_init+0xf2>
			Set_Bit(DDRB,PinNumber);
     e9e:	27 b3       	in	r18, 0x17	; 23
     ea0:	81 e0       	ldi	r24, 0x01	; 1
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_init+0x7e>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	6a 95       	dec	r22
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_init+0x7a>
     eae:	82 2b       	or	r24, r18
     eb0:	87 bb       	out	0x17, r24	; 23
     eb2:	35 c0       	rjmp	.+106    	; 0xf1e <DIO_init+0xf2>
			else
			error=1;
			break;
		case Port_C:
			if(direction == in)
     eb4:	41 11       	cpse	r20, r1
     eb6:	0c c0       	rjmp	.+24     	; 0xed0 <DIO_init+0xa4>
			Clear_Bit(DDRC,PinNumber);
     eb8:	24 b3       	in	r18, 0x14	; 20
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <DIO_init+0x98>
     ec0:	88 0f       	add	r24, r24
     ec2:	99 1f       	adc	r25, r25
     ec4:	6a 95       	dec	r22
     ec6:	e2 f7       	brpl	.-8      	; 0xec0 <DIO_init+0x94>
     ec8:	80 95       	com	r24
     eca:	82 23       	and	r24, r18
     ecc:	84 bb       	out	0x14, r24	; 20
     ece:	27 c0       	rjmp	.+78     	; 0xf1e <DIO_init+0xf2>
			else if(direction == out)
     ed0:	41 30       	cpi	r20, 0x01	; 1
     ed2:	29 f5       	brne	.+74     	; 0xf1e <DIO_init+0xf2>
			Set_Bit(DDRC,PinNumber);
     ed4:	24 b3       	in	r18, 0x14	; 20
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <DIO_init+0xb4>
     edc:	88 0f       	add	r24, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	6a 95       	dec	r22
     ee2:	e2 f7       	brpl	.-8      	; 0xedc <DIO_init+0xb0>
     ee4:	82 2b       	or	r24, r18
     ee6:	84 bb       	out	0x14, r24	; 20
     ee8:	1a c0       	rjmp	.+52     	; 0xf1e <DIO_init+0xf2>
			else
			error=1;
			break;
		case Port_D:
			if(direction == in)
     eea:	41 11       	cpse	r20, r1
     eec:	0c c0       	rjmp	.+24     	; 0xf06 <DIO_init+0xda>
			Clear_Bit(DDRD,PinNumber);
     eee:	21 b3       	in	r18, 0x11	; 17
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <DIO_init+0xce>
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	6a 95       	dec	r22
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <DIO_init+0xca>
     efe:	80 95       	com	r24
     f00:	82 23       	and	r24, r18
     f02:	81 bb       	out	0x11, r24	; 17
     f04:	0c c0       	rjmp	.+24     	; 0xf1e <DIO_init+0xf2>
			else if(direction == out)
     f06:	41 30       	cpi	r20, 0x01	; 1
     f08:	51 f4       	brne	.+20     	; 0xf1e <DIO_init+0xf2>
			Set_Bit(DDRD,PinNumber);
     f0a:	21 b3       	in	r18, 0x11	; 17
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <DIO_init+0xea>
     f12:	88 0f       	add	r24, r24
     f14:	99 1f       	adc	r25, r25
     f16:	6a 95       	dec	r22
     f18:	e2 f7       	brpl	.-8      	; 0xf12 <DIO_init+0xe6>
     f1a:	82 2b       	or	r24, r18
     f1c:	81 bb       	out	0x11, r24	; 17
			break;
			default:
			error=1;
	}
	return error;
}
     f1e:	80 e0       	ldi	r24, 0x00	; 0
     f20:	08 95       	ret

00000f22 <DIO_write>:
	
	uint8_t DIO_write(uint8_t PORTNumber, uint8_t PinNumber, uint8_t value)
	{
		uint8_t error=0;
		switch(PORTNumber)
     f22:	82 34       	cpi	r24, 0x42	; 66
     f24:	31 f1       	breq	.+76     	; 0xf72 <DIO_write+0x50>
     f26:	18 f4       	brcc	.+6      	; 0xf2e <DIO_write+0xc>
     f28:	81 34       	cpi	r24, 0x41	; 65
     f2a:	39 f0       	breq	.+14     	; 0xf3a <DIO_write+0x18>
     f2c:	73 c0       	rjmp	.+230    	; 0x1014 <DIO_write+0xf2>
     f2e:	83 34       	cpi	r24, 0x43	; 67
     f30:	e1 f1       	breq	.+120    	; 0xfaa <DIO_write+0x88>
     f32:	84 34       	cpi	r24, 0x44	; 68
     f34:	09 f4       	brne	.+2      	; 0xf38 <DIO_write+0x16>
     f36:	54 c0       	rjmp	.+168    	; 0xfe0 <DIO_write+0xbe>
     f38:	6d c0       	rjmp	.+218    	; 0x1014 <DIO_write+0xf2>
		{
			uint8_t error=0;
			case Port_A:
				if(value == low)
     f3a:	41 11       	cpse	r20, r1
     f3c:	0c c0       	rjmp	.+24     	; 0xf56 <DIO_write+0x34>
				Clear_Bit(PORTA,PinNumber);
     f3e:	2b b3       	in	r18, 0x1b	; 27
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <DIO_write+0x28>
     f46:	88 0f       	add	r24, r24
     f48:	99 1f       	adc	r25, r25
     f4a:	6a 95       	dec	r22
     f4c:	e2 f7       	brpl	.-8      	; 0xf46 <DIO_write+0x24>
     f4e:	80 95       	com	r24
     f50:	82 23       	and	r24, r18
     f52:	8b bb       	out	0x1b, r24	; 27
     f54:	5f c0       	rjmp	.+190    	; 0x1014 <DIO_write+0xf2>
				else if(value == high)
     f56:	41 30       	cpi	r20, 0x01	; 1
     f58:	09 f0       	breq	.+2      	; 0xf5c <DIO_write+0x3a>
     f5a:	5c c0       	rjmp	.+184    	; 0x1014 <DIO_write+0xf2>
				Set_Bit(PORTA,PinNumber);
     f5c:	2b b3       	in	r18, 0x1b	; 27
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <DIO_write+0x46>
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	6a 95       	dec	r22
     f6a:	e2 f7       	brpl	.-8      	; 0xf64 <DIO_write+0x42>
     f6c:	82 2b       	or	r24, r18
     f6e:	8b bb       	out	0x1b, r24	; 27
     f70:	51 c0       	rjmp	.+162    	; 0x1014 <DIO_write+0xf2>
				else
				error=1;
				break;
			case Port_B:
				if(value == low)
     f72:	41 11       	cpse	r20, r1
     f74:	0c c0       	rjmp	.+24     	; 0xf8e <DIO_write+0x6c>
				Clear_Bit(PORTB,PinNumber);
     f76:	28 b3       	in	r18, 0x18	; 24
     f78:	81 e0       	ldi	r24, 0x01	; 1
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <DIO_write+0x60>
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	6a 95       	dec	r22
     f84:	e2 f7       	brpl	.-8      	; 0xf7e <DIO_write+0x5c>
     f86:	80 95       	com	r24
     f88:	82 23       	and	r24, r18
     f8a:	88 bb       	out	0x18, r24	; 24
     f8c:	43 c0       	rjmp	.+134    	; 0x1014 <DIO_write+0xf2>
				else if(value == high)
     f8e:	41 30       	cpi	r20, 0x01	; 1
     f90:	09 f0       	breq	.+2      	; 0xf94 <DIO_write+0x72>
     f92:	40 c0       	rjmp	.+128    	; 0x1014 <DIO_write+0xf2>
				Set_Bit(PORTB,PinNumber);
     f94:	28 b3       	in	r18, 0x18	; 24
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <DIO_write+0x7e>
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	6a 95       	dec	r22
     fa2:	e2 f7       	brpl	.-8      	; 0xf9c <DIO_write+0x7a>
     fa4:	82 2b       	or	r24, r18
     fa6:	88 bb       	out	0x18, r24	; 24
     fa8:	35 c0       	rjmp	.+106    	; 0x1014 <DIO_write+0xf2>
				else
				error=1;
				break;
			case Port_C:
				if(value == low)
     faa:	41 11       	cpse	r20, r1
     fac:	0c c0       	rjmp	.+24     	; 0xfc6 <DIO_write+0xa4>
				Clear_Bit(PORTC,PinNumber);
     fae:	25 b3       	in	r18, 0x15	; 21
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <DIO_write+0x98>
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	6a 95       	dec	r22
     fbc:	e2 f7       	brpl	.-8      	; 0xfb6 <DIO_write+0x94>
     fbe:	80 95       	com	r24
     fc0:	82 23       	and	r24, r18
     fc2:	85 bb       	out	0x15, r24	; 21
     fc4:	27 c0       	rjmp	.+78     	; 0x1014 <DIO_write+0xf2>
				else if(value == high)
     fc6:	41 30       	cpi	r20, 0x01	; 1
     fc8:	29 f5       	brne	.+74     	; 0x1014 <DIO_write+0xf2>
				Set_Bit(PORTC,PinNumber);
     fca:	25 b3       	in	r18, 0x15	; 21
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <DIO_write+0xb4>
     fd2:	88 0f       	add	r24, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	6a 95       	dec	r22
     fd8:	e2 f7       	brpl	.-8      	; 0xfd2 <DIO_write+0xb0>
     fda:	82 2b       	or	r24, r18
     fdc:	85 bb       	out	0x15, r24	; 21
     fde:	1a c0       	rjmp	.+52     	; 0x1014 <DIO_write+0xf2>
				else
				error=1;
				break;
			case Port_D:
				if(value == low)
     fe0:	41 11       	cpse	r20, r1
     fe2:	0c c0       	rjmp	.+24     	; 0xffc <DIO_write+0xda>
				Clear_Bit(PORTD,PinNumber);
     fe4:	22 b3       	in	r18, 0x12	; 18
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <DIO_write+0xce>
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	6a 95       	dec	r22
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <DIO_write+0xca>
     ff4:	80 95       	com	r24
     ff6:	82 23       	and	r24, r18
     ff8:	82 bb       	out	0x12, r24	; 18
     ffa:	0c c0       	rjmp	.+24     	; 0x1014 <DIO_write+0xf2>
				else if(value == high)
     ffc:	41 30       	cpi	r20, 0x01	; 1
     ffe:	51 f4       	brne	.+20     	; 0x1014 <DIO_write+0xf2>
				Set_Bit(PORTD,PinNumber);
    1000:	22 b3       	in	r18, 0x12	; 18
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	02 c0       	rjmp	.+4      	; 0x100c <DIO_write+0xea>
    1008:	88 0f       	add	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	6a 95       	dec	r22
    100e:	e2 f7       	brpl	.-8      	; 0x1008 <DIO_write+0xe6>
    1010:	82 2b       	or	r24, r18
    1012:	82 bb       	out	0x12, r24	; 18
				break;
				default:
				error=1;
		}
		return error;
	}
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	08 95       	ret

00001018 <ex_int_init>:
#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
	Set_Bit(SREG,7);
    1018:	9f b7       	in	r25, 0x3f	; 63
    101a:	90 68       	ori	r25, 0x80	; 128
    101c:	9f bf       	out	0x3f, r25	; 63
	if(ex_int_number == Interrupt_0)
    101e:	81 11       	cpse	r24, r1
    1020:	30 c0       	rjmp	.+96     	; 0x1082 <ex_int_init+0x6a>
	{
		switch(ex_int_mode)
    1022:	64 30       	cpi	r22, 0x04	; 4
    1024:	89 f0       	breq	.+34     	; 0x1048 <ex_int_init+0x30>
    1026:	18 f4       	brcc	.+6      	; 0x102e <ex_int_init+0x16>
    1028:	63 30       	cpi	r22, 0x03	; 3
    102a:	31 f0       	breq	.+12     	; 0x1038 <ex_int_init+0x20>
    102c:	25 c0       	rjmp	.+74     	; 0x1078 <ex_int_init+0x60>
    102e:	65 30       	cpi	r22, 0x05	; 5
    1030:	99 f0       	breq	.+38     	; 0x1058 <ex_int_init+0x40>
    1032:	66 30       	cpi	r22, 0x06	; 6
    1034:	c9 f0       	breq	.+50     	; 0x1068 <ex_int_init+0x50>
    1036:	20 c0       	rjmp	.+64     	; 0x1078 <ex_int_init+0x60>
		{
			case low_level:
				Clear_Bit(MCUCR,0);
    1038:	85 b7       	in	r24, 0x35	; 53
    103a:	8e 7f       	andi	r24, 0xFE	; 254
    103c:	85 bf       	out	0x35, r24	; 53
				Clear_Bit(MCUCR,1);
    103e:	85 b7       	in	r24, 0x35	; 53
    1040:	8d 7f       	andi	r24, 0xFD	; 253
    1042:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    1044:	80 e0       	ldi	r24, 0x00	; 0
		switch(ex_int_mode)
		{
			case low_level:
				Clear_Bit(MCUCR,0);
				Clear_Bit(MCUCR,1);
				break;
    1046:	19 c0       	rjmp	.+50     	; 0x107a <ex_int_init+0x62>
			case any_logical_change:
				Set_Bit(MCUCR,0);
    1048:	85 b7       	in	r24, 0x35	; 53
    104a:	81 60       	ori	r24, 0x01	; 1
    104c:	85 bf       	out	0x35, r24	; 53
				Clear_Bit(MCUCR,1);
    104e:	85 b7       	in	r24, 0x35	; 53
    1050:	8d 7f       	andi	r24, 0xFD	; 253
    1052:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    1054:	80 e0       	ldi	r24, 0x00	; 0
				Clear_Bit(MCUCR,1);
				break;
			case any_logical_change:
				Set_Bit(MCUCR,0);
				Clear_Bit(MCUCR,1);
				break;
    1056:	11 c0       	rjmp	.+34     	; 0x107a <ex_int_init+0x62>
			case falling_edge:
				Clear_Bit(MCUCR,0);
    1058:	85 b7       	in	r24, 0x35	; 53
    105a:	8e 7f       	andi	r24, 0xFE	; 254
    105c:	85 bf       	out	0x35, r24	; 53
				Set_Bit(MCUCR,1);
    105e:	85 b7       	in	r24, 0x35	; 53
    1060:	82 60       	ori	r24, 0x02	; 2
    1062:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    1064:	80 e0       	ldi	r24, 0x00	; 0
				Clear_Bit(MCUCR,1);
				break;
			case falling_edge:
				Clear_Bit(MCUCR,0);
				Set_Bit(MCUCR,1);
				break;
    1066:	09 c0       	rjmp	.+18     	; 0x107a <ex_int_init+0x62>
			case rising_edge:
				Set_Bit(MCUCR,0);
    1068:	85 b7       	in	r24, 0x35	; 53
    106a:	81 60       	ori	r24, 0x01	; 1
    106c:	85 bf       	out	0x35, r24	; 53
				Set_Bit(MCUCR,1);
    106e:	85 b7       	in	r24, 0x35	; 53
    1070:	82 60       	ori	r24, 0x02	; 2
    1072:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    1074:	80 e0       	ldi	r24, 0x00	; 0
				Set_Bit(MCUCR,1);
				break;
			case rising_edge:
				Set_Bit(MCUCR,0);
				Set_Bit(MCUCR,1);
				break;
    1076:	01 c0       	rjmp	.+2      	; 0x107a <ex_int_init+0x62>
			default:
				error=1;
    1078:	81 e0       	ldi	r24, 0x01	; 1
		}
		Set_Bit(GICR,6);
    107a:	9b b7       	in	r25, 0x3b	; 59
    107c:	90 64       	ori	r25, 0x40	; 64
    107e:	9b bf       	out	0x3b, r25	; 59
    1080:	08 95       	ret
	}
	else if(ex_int_number == Interrupt_1)
    1082:	81 30       	cpi	r24, 0x01	; 1
    1084:	81 f5       	brne	.+96     	; 0x10e6 <ex_int_init+0xce>
	{
		switch(ex_int_mode)
    1086:	64 30       	cpi	r22, 0x04	; 4
    1088:	89 f0       	breq	.+34     	; 0x10ac <ex_int_init+0x94>
    108a:	18 f4       	brcc	.+6      	; 0x1092 <ex_int_init+0x7a>
    108c:	63 30       	cpi	r22, 0x03	; 3
    108e:	31 f0       	breq	.+12     	; 0x109c <ex_int_init+0x84>
    1090:	25 c0       	rjmp	.+74     	; 0x10dc <ex_int_init+0xc4>
    1092:	65 30       	cpi	r22, 0x05	; 5
    1094:	99 f0       	breq	.+38     	; 0x10bc <ex_int_init+0xa4>
    1096:	66 30       	cpi	r22, 0x06	; 6
    1098:	c9 f0       	breq	.+50     	; 0x10cc <ex_int_init+0xb4>
    109a:	20 c0       	rjmp	.+64     	; 0x10dc <ex_int_init+0xc4>
		{
			case low_level:
			Clear_Bit(MCUCR,2);
    109c:	85 b7       	in	r24, 0x35	; 53
    109e:	8b 7f       	andi	r24, 0xFB	; 251
    10a0:	85 bf       	out	0x35, r24	; 53
			Clear_Bit(MCUCR,3);
    10a2:	85 b7       	in	r24, 0x35	; 53
    10a4:	87 7f       	andi	r24, 0xF7	; 247
    10a6:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    10a8:	80 e0       	ldi	r24, 0x00	; 0
		switch(ex_int_mode)
		{
			case low_level:
			Clear_Bit(MCUCR,2);
			Clear_Bit(MCUCR,3);
			break;
    10aa:	19 c0       	rjmp	.+50     	; 0x10de <ex_int_init+0xc6>
			case any_logical_change:
			Set_Bit(MCUCR,2);
    10ac:	85 b7       	in	r24, 0x35	; 53
    10ae:	84 60       	ori	r24, 0x04	; 4
    10b0:	85 bf       	out	0x35, r24	; 53
			Clear_Bit(MCUCR,3);
    10b2:	85 b7       	in	r24, 0x35	; 53
    10b4:	87 7f       	andi	r24, 0xF7	; 247
    10b6:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    10b8:	80 e0       	ldi	r24, 0x00	; 0
			Clear_Bit(MCUCR,3);
			break;
			case any_logical_change:
			Set_Bit(MCUCR,2);
			Clear_Bit(MCUCR,3);
			break;
    10ba:	11 c0       	rjmp	.+34     	; 0x10de <ex_int_init+0xc6>
			case falling_edge:
			Clear_Bit(MCUCR,2);
    10bc:	85 b7       	in	r24, 0x35	; 53
    10be:	8b 7f       	andi	r24, 0xFB	; 251
    10c0:	85 bf       	out	0x35, r24	; 53
			Set_Bit(MCUCR,3);
    10c2:	85 b7       	in	r24, 0x35	; 53
    10c4:	88 60       	ori	r24, 0x08	; 8
    10c6:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    10c8:	80 e0       	ldi	r24, 0x00	; 0
			Clear_Bit(MCUCR,3);
			break;
			case falling_edge:
			Clear_Bit(MCUCR,2);
			Set_Bit(MCUCR,3);
			break;
    10ca:	09 c0       	rjmp	.+18     	; 0x10de <ex_int_init+0xc6>
			case rising_edge:
			Set_Bit(MCUCR,2);
    10cc:	85 b7       	in	r24, 0x35	; 53
    10ce:	84 60       	ori	r24, 0x04	; 4
    10d0:	85 bf       	out	0x35, r24	; 53
			Set_Bit(MCUCR,3);
    10d2:	85 b7       	in	r24, 0x35	; 53
    10d4:	88 60       	ori	r24, 0x08	; 8
    10d6:	85 bf       	out	0x35, r24	; 53

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    10d8:	80 e0       	ldi	r24, 0x00	; 0
			Set_Bit(MCUCR,3);
			break;
			case rising_edge:
			Set_Bit(MCUCR,2);
			Set_Bit(MCUCR,3);
			break;
    10da:	01 c0       	rjmp	.+2      	; 0x10de <ex_int_init+0xc6>
			default:
			error=1;
    10dc:	81 e0       	ldi	r24, 0x01	; 1
		}
		Set_Bit(GICR,7);
    10de:	9b b7       	in	r25, 0x3b	; 59
    10e0:	90 68       	ori	r25, 0x80	; 128
    10e2:	9b bf       	out	0x3b, r25	; 59
    10e4:	08 95       	ret
	}
	else if(ex_int_number == Interrupt_2)
    10e6:	82 30       	cpi	r24, 0x02	; 2
    10e8:	a1 f4       	brne	.+40     	; 0x1112 <ex_int_init+0xfa>
	{
		switch(ex_int_mode)
    10ea:	65 30       	cpi	r22, 0x05	; 5
    10ec:	19 f0       	breq	.+6      	; 0x10f4 <ex_int_init+0xdc>
    10ee:	66 30       	cpi	r22, 0x06	; 6
    10f0:	31 f0       	breq	.+12     	; 0x10fe <ex_int_init+0xe6>
    10f2:	0a c0       	rjmp	.+20     	; 0x1108 <ex_int_init+0xf0>
		{
			case falling_edge:
				Clear_Bit(MCUCSR,6);
    10f4:	84 b7       	in	r24, 0x34	; 52
    10f6:	8f 7b       	andi	r24, 0xBF	; 191
    10f8:	84 bf       	out	0x34, r24	; 52

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    10fa:	80 e0       	ldi	r24, 0x00	; 0
	{
		switch(ex_int_mode)
		{
			case falling_edge:
				Clear_Bit(MCUCSR,6);
				break;
    10fc:	06 c0       	rjmp	.+12     	; 0x110a <ex_int_init+0xf2>
			case rising_edge:
				Set_Bit(MCUCSR,6);
    10fe:	84 b7       	in	r24, 0x34	; 52
    1100:	80 64       	ori	r24, 0x40	; 64
    1102:	84 bf       	out	0x34, r24	; 52

#include "Interrupt.h"

uint8_t ex_int_init(uint8_t ex_int_number, uint8_t ex_int_mode)
{
	uint8_t error=0;
    1104:	80 e0       	ldi	r24, 0x00	; 0
			case falling_edge:
				Clear_Bit(MCUCSR,6);
				break;
			case rising_edge:
				Set_Bit(MCUCSR,6);
				break;
    1106:	01 c0       	rjmp	.+2      	; 0x110a <ex_int_init+0xf2>
			default:
				error=1;
    1108:	81 e0       	ldi	r24, 0x01	; 1
		}
		Set_Bit(GICR,5);
    110a:	9b b7       	in	r25, 0x3b	; 59
    110c:	90 62       	ori	r25, 0x20	; 32
    110e:	9b bf       	out	0x3b, r25	; 59
    1110:	08 95       	ret
	}
	else
	{
		error=1;
    1112:	81 e0       	ldi	r24, 0x01	; 1
	}
	return error;
}
    1114:	08 95       	ret

00001116 <timer0_init>:
#include "Timer_0.h"

uint8_t timer0_init(uint8_t mode_of_operation, uint8_t timer_starting_value)
{
	uint8_t error=0;
	switch(mode_of_operation)
    1116:	81 30       	cpi	r24, 0x01	; 1
    1118:	69 f0       	breq	.+26     	; 0x1134 <timer0_init+0x1e>
    111a:	28 f0       	brcs	.+10     	; 0x1126 <timer0_init+0x10>
    111c:	82 30       	cpi	r24, 0x02	; 2
    111e:	89 f0       	breq	.+34     	; 0x1142 <timer0_init+0x2c>
    1120:	83 30       	cpi	r24, 0x03	; 3
    1122:	b1 f0       	breq	.+44     	; 0x1150 <timer0_init+0x3a>
    1124:	1b c0       	rjmp	.+54     	; 0x115c <timer0_init+0x46>
	{
		case Normal:
			Clear_Bit(TCCR0,6);
    1126:	83 b7       	in	r24, 0x33	; 51
    1128:	8f 7b       	andi	r24, 0xBF	; 191
    112a:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,3);
    112c:	83 b7       	in	r24, 0x33	; 51
    112e:	87 7f       	andi	r24, 0xF7	; 247
    1130:	83 bf       	out	0x33, r24	; 51
			break;
    1132:	14 c0       	rjmp	.+40     	; 0x115c <timer0_init+0x46>
		case PWM:
			Set_Bit(TCCR0,6);
    1134:	83 b7       	in	r24, 0x33	; 51
    1136:	80 64       	ori	r24, 0x40	; 64
    1138:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,3);
    113a:	83 b7       	in	r24, 0x33	; 51
    113c:	87 7f       	andi	r24, 0xF7	; 247
    113e:	83 bf       	out	0x33, r24	; 51
			break;
    1140:	0d c0       	rjmp	.+26     	; 0x115c <timer0_init+0x46>
		case CTC:
			Clear_Bit(TCCR0,6);
    1142:	83 b7       	in	r24, 0x33	; 51
    1144:	8f 7b       	andi	r24, 0xBF	; 191
    1146:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,3);
    1148:	83 b7       	in	r24, 0x33	; 51
    114a:	88 60       	ori	r24, 0x08	; 8
    114c:	83 bf       	out	0x33, r24	; 51
			break;
    114e:	06 c0       	rjmp	.+12     	; 0x115c <timer0_init+0x46>
		case Fast_PWM:
			Set_Bit(TCCR0,6);
    1150:	83 b7       	in	r24, 0x33	; 51
    1152:	80 64       	ori	r24, 0x40	; 64
    1154:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,3);
    1156:	83 b7       	in	r24, 0x33	; 51
    1158:	88 60       	ori	r24, 0x08	; 8
    115a:	83 bf       	out	0x33, r24	; 51
			break;
		default:
			error=1;
			break;
	}
	TCNT0 = timer_starting_value;
    115c:	62 bf       	out	0x32, r22	; 50
	Set_Bit(SREG,7);
    115e:	8f b7       	in	r24, 0x3f	; 63
    1160:	80 68       	ori	r24, 0x80	; 128
    1162:	8f bf       	out	0x3f, r24	; 63
	Set_Bit(TIMSK,0);
    1164:	89 b7       	in	r24, 0x39	; 57
    1166:	81 60       	ori	r24, 0x01	; 1
    1168:	89 bf       	out	0x39, r24	; 57
}
    116a:	08 95       	ret

0000116c <start_timer0>:

uint8_t start_timer0(unsigned int prescaler)
{
	uint8_t error=0;
	switch(prescaler)
    116c:	88 30       	cpi	r24, 0x08	; 8
    116e:	91 05       	cpc	r25, r1
    1170:	39 f1       	breq	.+78     	; 0x11c0 <start_timer0+0x54>
    1172:	30 f4       	brcc	.+12     	; 0x1180 <start_timer0+0x14>
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	81 f0       	breq	.+32     	; 0x1198 <start_timer0+0x2c>
    1178:	81 30       	cpi	r24, 0x01	; 1
    117a:	91 05       	cpc	r25, r1
    117c:	b9 f0       	breq	.+46     	; 0x11ac <start_timer0+0x40>
    117e:	08 95       	ret
    1180:	81 15       	cp	r24, r1
    1182:	21 e0       	ldi	r18, 0x01	; 1
    1184:	92 07       	cpc	r25, r18
    1186:	81 f1       	breq	.+96     	; 0x11e8 <start_timer0+0x7c>
    1188:	81 15       	cp	r24, r1
    118a:	24 e0       	ldi	r18, 0x04	; 4
    118c:	92 07       	cpc	r25, r18
    118e:	b1 f1       	breq	.+108    	; 0x11fc <start_timer0+0x90>
    1190:	80 34       	cpi	r24, 0x40	; 64
    1192:	91 05       	cpc	r25, r1
    1194:	e1 f5       	brne	.+120    	; 0x120e <start_timer0+0xa2>
    1196:	1e c0       	rjmp	.+60     	; 0x11d4 <start_timer0+0x68>
	{
		case 0:
			Clear_Bit(TCCR0,0);
    1198:	83 b7       	in	r24, 0x33	; 51
    119a:	8e 7f       	andi	r24, 0xFE	; 254
    119c:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,1);
    119e:	83 b7       	in	r24, 0x33	; 51
    11a0:	8d 7f       	andi	r24, 0xFD	; 253
    11a2:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,2);
    11a4:	83 b7       	in	r24, 0x33	; 51
    11a6:	8b 7f       	andi	r24, 0xFB	; 251
    11a8:	83 bf       	out	0x33, r24	; 51
			break;
    11aa:	08 95       	ret
		case 1:
			Set_Bit(TCCR0,0);
    11ac:	83 b7       	in	r24, 0x33	; 51
    11ae:	81 60       	ori	r24, 0x01	; 1
    11b0:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,1);
    11b2:	83 b7       	in	r24, 0x33	; 51
    11b4:	8d 7f       	andi	r24, 0xFD	; 253
    11b6:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,2);
    11b8:	83 b7       	in	r24, 0x33	; 51
    11ba:	8b 7f       	andi	r24, 0xFB	; 251
    11bc:	83 bf       	out	0x33, r24	; 51
			break;
    11be:	08 95       	ret
		case 8:
			Clear_Bit(TCCR0,0);
    11c0:	83 b7       	in	r24, 0x33	; 51
    11c2:	8e 7f       	andi	r24, 0xFE	; 254
    11c4:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,1);
    11c6:	83 b7       	in	r24, 0x33	; 51
    11c8:	82 60       	ori	r24, 0x02	; 2
    11ca:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,2);
    11cc:	83 b7       	in	r24, 0x33	; 51
    11ce:	8b 7f       	andi	r24, 0xFB	; 251
    11d0:	83 bf       	out	0x33, r24	; 51
			break;
    11d2:	08 95       	ret
		case 64:
			Set_Bit(TCCR0,0);
    11d4:	83 b7       	in	r24, 0x33	; 51
    11d6:	81 60       	ori	r24, 0x01	; 1
    11d8:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,1);
    11da:	83 b7       	in	r24, 0x33	; 51
    11dc:	82 60       	ori	r24, 0x02	; 2
    11de:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,2);
    11e0:	83 b7       	in	r24, 0x33	; 51
    11e2:	8b 7f       	andi	r24, 0xFB	; 251
    11e4:	83 bf       	out	0x33, r24	; 51
			break;
    11e6:	08 95       	ret
		case 256:
			Clear_Bit(TCCR0,0);
    11e8:	83 b7       	in	r24, 0x33	; 51
    11ea:	8e 7f       	andi	r24, 0xFE	; 254
    11ec:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,1);
    11ee:	83 b7       	in	r24, 0x33	; 51
    11f0:	8d 7f       	andi	r24, 0xFD	; 253
    11f2:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,2);
    11f4:	83 b7       	in	r24, 0x33	; 51
    11f6:	84 60       	ori	r24, 0x04	; 4
    11f8:	83 bf       	out	0x33, r24	; 51
			break;
    11fa:	08 95       	ret
		case 1024:
			Set_Bit(TCCR0,0);
    11fc:	83 b7       	in	r24, 0x33	; 51
    11fe:	81 60       	ori	r24, 0x01	; 1
    1200:	83 bf       	out	0x33, r24	; 51
			Clear_Bit(TCCR0,1);
    1202:	83 b7       	in	r24, 0x33	; 51
    1204:	8d 7f       	andi	r24, 0xFD	; 253
    1206:	83 bf       	out	0x33, r24	; 51
			Set_Bit(TCCR0,2);
    1208:	83 b7       	in	r24, 0x33	; 51
    120a:	84 60       	ori	r24, 0x04	; 4
    120c:	83 bf       	out	0x33, r24	; 51
			break;
		default:
			error = 1;
			break;
	}
    120e:	08 95       	ret

00001210 <_exit>:
    1210:	f8 94       	cli

00001212 <__stop_program>:
    1212:	ff cf       	rjmp	.-2      	; 0x1212 <__stop_program>
